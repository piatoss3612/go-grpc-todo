// @generated by protoc-gen-es v1.2.0
// @generated from file todo/v1/todo.proto (package todo.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Timestamp } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from enum todo.v1.Priority
 */
export declare enum Priority {
  /**
   * @generated from enum value: PRIORITY_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: PRIORITY_LOW = 1;
   */
  LOW = 1,

  /**
   * @generated from enum value: PRIORITY_MEDIUM = 2;
   */
  MEDIUM = 2,

  /**
   * @generated from enum value: PRIORITY_HIGH = 3;
   */
  HIGH = 3,
}

/**
 * @generated from message todo.v1.Todo
 */
export declare class Todo extends Message<Todo> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string content = 2;
   */
  content: string;

  /**
   * @generated from field: todo.v1.Priority priority = 3;
   */
  priority: Priority;

  /**
   * @generated from field: bool is_done = 4;
   */
  isDone: boolean;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 5;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 6;
   */
  updatedAt?: Timestamp;

  constructor(data?: PartialMessage<Todo>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "todo.v1.Todo";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Todo;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Todo;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Todo;

  static equals(a: Todo | PlainMessage<Todo> | undefined, b: Todo | PlainMessage<Todo> | undefined): boolean;
}

/**
 * @generated from message todo.v1.AddRequest
 */
export declare class AddRequest extends Message<AddRequest> {
  /**
   * @generated from field: string content = 1;
   */
  content: string;

  /**
   * @generated from field: todo.v1.Priority priority = 2;
   */
  priority: Priority;

  constructor(data?: PartialMessage<AddRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "todo.v1.AddRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddRequest;

  static equals(a: AddRequest | PlainMessage<AddRequest> | undefined, b: AddRequest | PlainMessage<AddRequest> | undefined): boolean;
}

/**
 * @generated from message todo.v1.AddResponse
 */
export declare class AddResponse extends Message<AddResponse> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  constructor(data?: PartialMessage<AddResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "todo.v1.AddResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddResponse;

  static equals(a: AddResponse | PlainMessage<AddResponse> | undefined, b: AddResponse | PlainMessage<AddResponse> | undefined): boolean;
}

/**
 * @generated from message todo.v1.GetRequest
 */
export declare class GetRequest extends Message<GetRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  constructor(data?: PartialMessage<GetRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "todo.v1.GetRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetRequest;

  static equals(a: GetRequest | PlainMessage<GetRequest> | undefined, b: GetRequest | PlainMessage<GetRequest> | undefined): boolean;
}

/**
 * @generated from message todo.v1.UpdateRequest
 */
export declare class UpdateRequest extends Message<UpdateRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string content = 2;
   */
  content: string;

  /**
   * @generated from field: todo.v1.Priority priority = 3;
   */
  priority: Priority;

  /**
   * @generated from field: bool is_done = 4;
   */
  isDone: boolean;

  constructor(data?: PartialMessage<UpdateRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "todo.v1.UpdateRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateRequest;

  static equals(a: UpdateRequest | PlainMessage<UpdateRequest> | undefined, b: UpdateRequest | PlainMessage<UpdateRequest> | undefined): boolean;
}

/**
 * @generated from message todo.v1.UpdateResponse
 */
export declare class UpdateResponse extends Message<UpdateResponse> {
  /**
   * @generated from field: int64 affected = 1;
   */
  affected: bigint;

  constructor(data?: PartialMessage<UpdateResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "todo.v1.UpdateResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateResponse;

  static equals(a: UpdateResponse | PlainMessage<UpdateResponse> | undefined, b: UpdateResponse | PlainMessage<UpdateResponse> | undefined): boolean;
}

/**
 * @generated from message todo.v1.UpdateManyResponse
 */
export declare class UpdateManyResponse extends Message<UpdateManyResponse> {
  /**
   * @generated from field: int64 affected = 1;
   */
  affected: bigint;

  constructor(data?: PartialMessage<UpdateManyResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "todo.v1.UpdateManyResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateManyResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateManyResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateManyResponse;

  static equals(a: UpdateManyResponse | PlainMessage<UpdateManyResponse> | undefined, b: UpdateManyResponse | PlainMessage<UpdateManyResponse> | undefined): boolean;
}

/**
 * @generated from message todo.v1.DeleteRequest
 */
export declare class DeleteRequest extends Message<DeleteRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  constructor(data?: PartialMessage<DeleteRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "todo.v1.DeleteRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteRequest;

  static equals(a: DeleteRequest | PlainMessage<DeleteRequest> | undefined, b: DeleteRequest | PlainMessage<DeleteRequest> | undefined): boolean;
}

/**
 * @generated from message todo.v1.DeleteResponse
 */
export declare class DeleteResponse extends Message<DeleteResponse> {
  /**
   * @generated from field: int64 affected = 1;
   */
  affected: bigint;

  constructor(data?: PartialMessage<DeleteResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "todo.v1.DeleteResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteResponse;

  static equals(a: DeleteResponse | PlainMessage<DeleteResponse> | undefined, b: DeleteResponse | PlainMessage<DeleteResponse> | undefined): boolean;
}

/**
 * @generated from message todo.v1.DeleteAllResponse
 */
export declare class DeleteAllResponse extends Message<DeleteAllResponse> {
  /**
   * @generated from field: int64 affected = 1;
   */
  affected: bigint;

  constructor(data?: PartialMessage<DeleteAllResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "todo.v1.DeleteAllResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteAllResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteAllResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteAllResponse;

  static equals(a: DeleteAllResponse | PlainMessage<DeleteAllResponse> | undefined, b: DeleteAllResponse | PlainMessage<DeleteAllResponse> | undefined): boolean;
}

/**
 * @generated from message todo.v1.Empty
 */
export declare class Empty extends Message<Empty> {
  constructor(data?: PartialMessage<Empty>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "todo.v1.Empty";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Empty;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Empty;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Empty;

  static equals(a: Empty | PlainMessage<Empty> | undefined, b: Empty | PlainMessage<Empty> | undefined): boolean;
}

