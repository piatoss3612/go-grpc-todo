// @generated by protoc-gen-connect-web v0.8.4
// @generated from file todo/v1/todo.proto (package todo.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { AddRequest, AddResponse, DeleteAllResponse, DeleteRequest, DeleteResponse, Empty, GetRequest, Todo, UpdateManyResponse, UpdateRequest, UpdateResponse } from "./todo_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service todo.v1.TodoService
 */
export const TodoService = {
  typeName: "todo.v1.TodoService",
  methods: {
    /**
     * @generated from rpc todo.v1.TodoService.Add
     */
    add: {
      name: "Add",
      I: AddRequest,
      O: AddResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc todo.v1.TodoService.AddMany
     */
    addMany: {
      name: "AddMany",
      I: AddRequest,
      O: AddResponse,
      kind: MethodKind.BiDiStreaming,
    },
    /**
     * @generated from rpc todo.v1.TodoService.Get
     */
    get: {
      name: "Get",
      I: GetRequest,
      O: Todo,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc todo.v1.TodoService.GetAll
     */
    getAll: {
      name: "GetAll",
      I: Empty,
      O: Todo,
      kind: MethodKind.ServerStreaming,
    },
    /**
     * @generated from rpc todo.v1.TodoService.Update
     */
    update: {
      name: "Update",
      I: UpdateRequest,
      O: UpdateResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc todo.v1.TodoService.UpdateMany
     */
    updateMany: {
      name: "UpdateMany",
      I: UpdateRequest,
      O: UpdateManyResponse,
      kind: MethodKind.ClientStreaming,
    },
    /**
     * @generated from rpc todo.v1.TodoService.Delete
     */
    delete: {
      name: "Delete",
      I: DeleteRequest,
      O: DeleteResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc todo.v1.TodoService.DeleteAll
     */
    deleteAll: {
      name: "DeleteAll",
      I: Empty,
      O: DeleteAllResponse,
      kind: MethodKind.Unary,
    },
  }
};

